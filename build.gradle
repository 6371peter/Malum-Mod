buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${project.minecraft}-${project.modVersion}"
group = 'com.sammy.malum'
archivesBaseName = project.modId
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}
minecraft {
    mappings channel: 'official', version: '1.18.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
//            properties 'mixin.env.remapRefMap': 'true'
//            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
//            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        server {
//            properties 'mixin.env.remapRefMap': 'true'
//            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
//            arg "-mixin.config=" + archivesBaseName + ".mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                self {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', "${project.modId}", '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                self {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name 'Curios maven'
        url = "https://maven.theillusivec4.top/"
    }

    maven {
        name 'JEI maven'
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "CTM Maven"
        url = "https://maven.tterrag.com/"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18-5.0.2.4:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18-5.0.2.4")

    compileOnly fg.deobf('mezz.jei:jei-1.18.1:9.1.0.46')
    runtimeOnly fg.deobf('mezz.jei:jei-1.18.1:9.1.0.46')

//    runtimeOnly fg.deobf("team.chisel.ctm:CTM:MC1.16.1-1.1.1.5")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "malum",
            "Specification-Vendor": "malumsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"malumsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}